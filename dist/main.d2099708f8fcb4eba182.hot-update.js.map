{"version":3,"file":"main.d2099708f8fcb4eba182.hot-update.js","sources":["C:/Users/csabadoc/Documents/workspace/zoom-video-sdk-web-1.3.0/zoom-video-sdk-web-1.3.0/react-demo/src/App.tsx"],"sourcesContent":["import React, {\n  useEffect,\n  useContext,\n  useState,\n  useCallback,\n  useReducer,\n} from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ZoomVideo, { ConnectionState } from \"@zoom/videosdk\";\nimport { message, Modal } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport produce from \"immer\";\nimport Home from \"./feature/home/home\";\nimport Video from \"./feature/video/video\";\nimport VideoSingle from \"./feature/video/video-single\";\nimport VideoNonSAB from \"./feature/video/video-non-sab\";\nimport Preview from \"./feature/preview/preview\";\nimport ZoomContext from \"./context/zoom-context\";\nimport ZoomMediaContext from \"./context/media-context\";\nimport ChatContext from \"./context/chat-context\";\nimport CommandContext from \"./context/cmd-context\";\nimport RecordingContext from \"./context/recording-context\";\nimport LoadingLayer from \"./component/loading-layer\";\nimport Chat from \"./feature/chat/chat\";\nimport Command from \"./feature/command/command\";\nimport { ChatClient, CommandChannelClient, MediaStream, RecordingClient } from \"./index-types\";\nimport \"./App.css\";\n\ndeclare global {\n  interface Window {\n    webEndpoint: string | undefined;\n    zmClient: any | undefined;\n    mediaStream: any | undefined;\n    crossOriginIsolated:boolean\n  }\n}\n\ninterface AppProps {\n  meetingArgs: {\n    sdkKey: string;\n    topic: string;\n    signature: string;\n    name: string;\n    password?: string;\n    enforceGalleryView?: string;\n  };\n}\nconst mediaShape = {\n  audio: {\n    encode: false,\n    decode: false,\n  },\n  video: {\n    encode: false,\n    decode: false,\n  },\n  share: {\n    encode: false,\n    decode: false,\n  },\n};\nconst mediaReducer = produce((draft, action) => {\n  switch (action.type) {\n    case \"audio-encode\": {\n      draft.audio.encode = action.payload;\n      break;\n    }\n    case \"audio-decode\": {\n      draft.audio.decode = action.payload;\n      break;\n    }\n    case \"video-encode\": {\n      draft.video.encode = action.payload;\n      break;\n    }\n    case \"video-decode\": {\n      draft.video.decode = action.payload;\n      break;\n    }\n    case \"share-encode\": {\n      draft.share.encode = action.payload;\n      break;\n    }\n    case \"share-decode\": {\n      draft.share.decode = action.payload;\n      break;\n    }\n    case \"reset-media\":{\n     Object.assign(draft,{...mediaShape});\n      break;\n    }\n\n    default:\n      break;\n  }\n}, mediaShape);\n\nfunction App(props: AppProps) {\n  const {\n    meetingArgs: { sdkKey, topic, signature, name, password, enforceGalleryView }\n  } = props;\n  const [loading, setIsLoading] = useState(true);\n  const [loadingText, setLoadingText] = useState(\"\");\n  const [isFailover, setIsFailover] = useState<boolean>(false);\n  const [status, setStatus] = useState<string>(\"closed\");\n  const [mediaState, dispatch] = useReducer(mediaReducer, mediaShape);\n  const [mediaStream, setMediaStream] = useState<MediaStream | null>(null);\n  const [chatClient, setChatClient] = useState<ChatClient | null>(null);\n  const [recordingClient, setRecordingClient] = useState<RecordingClient | null>(null);\n  const [commandClient, setCommandClient] = useState<CommandChannelClient | null>(null);\n  const [isSupportGalleryView, setIsSupportGalleryView] = useState<boolean>(\n    true\n  );\n  const zmClient = useContext(ZoomContext);\n  const webEndpoint = 'zoom.us';\n  const galleryViewWithoutSAB = !!enforceGalleryView && !window.crossOriginIsolated;\n  useEffect(() => {\n    const init = async () => {\n      await zmClient.init(\n        \"en-US\",\n        `${window.location.origin}/lib`,\n        {\n          webEndpoint,\n          enforceMultipleVideos:galleryViewWithoutSAB\n        }\n      );\n      try {\n        setLoadingText(\"Joining the session...\");\n        await zmClient.join(topic, signature, name, password);\n        const stream = zmClient.getMediaStream();\n        setMediaStream(stream);\n        setIsSupportGalleryView(stream.isSupportMultipleVideos());\n        const chatClient = zmClient.getChatClient();\n        const commandClient = zmClient.getCommandClient();\n        const recordingClient = zmClient.getRecordingClient();\n        setChatClient(chatClient);\n        setCommandClient(commandClient);\n        setRecordingClient(recordingClient);\n        setIsLoading(false);\n      } catch (e: any) {\n        console.log('Error joining meeting', e);\n        setIsLoading(false);\n        message.error(e.reason);\n      }\n    };\n    init();\n    return () => {\n      ZoomVideo.destroyClient();\n    };\n  }, [sdkKey, signature, zmClient, topic, name, password, webEndpoint, galleryViewWithoutSAB]);\n  \n  const onConnectionChange = useCallback(\n    (payload) => {\n      if (payload.state === ConnectionState.Reconnecting) {\n        setIsLoading(true);\n        setIsFailover(true);\n        setStatus(\"connecting\");\n        const { reason } = payload;\n        if (reason === \"failover\") {\n          setLoadingText(\"Session Disconnected,Try to reconnect\");\n        }\n      } else if (payload.state === ConnectionState.Connected) {\n        setStatus(\"connected\");\n        if (isFailover) {\n          setIsLoading(false);\n        }\n      } else if (payload.state === ConnectionState.Closed) {\n        setStatus(\"closed\");\n        dispatch({type:'reset-media'});\n        if (payload.reason === \"ended by host\") {\n          Modal.warning({\n            title: \"Meeting ended\",\n            content: \"This meeting has been ended by host\",\n          });\n        }\n      }\n    },\n    [isFailover]\n  );\n  const onMediaSDKChange = useCallback((payload) => {\n    const { action, type, result } = payload;\n    dispatch({ type: `${type}-${action}`, payload: result === \"success\" });\n  }, []);\n\n  const onDialoutChange = useCallback((payload) => {\n    console.log('onDialoutChange', payload);\n  }, []);\n\n  const onAudioMerged = useCallback((payload) => {\n    console.log('onAudioMerged', payload);\n  }, []);\n\n  const onLeaveOrJoinSession = useCallback(async () => {\n    if (status === \"closed\") {\n      setIsLoading(true);\n      await zmClient.join(topic, signature, name, password);\n      setIsLoading(false);\n    } else if (status === \"connected\") {\n      await zmClient.leave();\n      message.warn(\"You have left the session.\");\n    }\n  }, [zmClient, status, topic, signature, name, password]);\n  useEffect(() => {\n    zmClient.on(\"connection-change\", onConnectionChange);\n    zmClient.on(\"media-sdk-change\", onMediaSDKChange);\n    zmClient.on(\"dialout-state-change\", onDialoutChange);\n    zmClient.on(\"merged-audio\", onAudioMerged);\n    return () => {\n      zmClient.off(\"connection-change\", onConnectionChange);\n      zmClient.off(\"media-sdk-change\", onMediaSDKChange);\n      zmClient.off(\"dialout-state-change\", onDialoutChange);\n      zmClient.off(\"merged-audio\", onAudioMerged);\n    };\n  }, [zmClient, onConnectionChange, onMediaSDKChange, onDialoutChange, onAudioMerged]);\n  return (\n    <div className=\"App\">\n      {loading && <LoadingLayer content={loadingText} />}\n      {!loading && (\n        <ZoomMediaContext.Provider value={{ ...mediaState, mediaStream }}>\n          <ChatContext.Provider value={chatClient}>\n          <RecordingContext.Provider value={recordingClient}>\n            <CommandContext.Provider value={commandClient} >\n            <Router>\n              <Switch>\n                <Route\n                  path=\"/\"\n                  render={(props) => (\n                    <Home\n                      {...props}\n                      status={status}\n                      onLeaveOrJoinSession={onLeaveOrJoinSession}\n                    />\n                  )}\n                  exact\n                />\n                <Route\n                  path=\"/index.html\"\n                  render={(props) => (\n                    <Home\n                      {...props}\n                      status={status}\n                      onLeaveOrJoinSession={onLeaveOrJoinSession}\n                    />\n                  )}\n                  exact\n                />\n                <Route path=\"/preview\" component={Preview} />\n                <Route path=\"/video\" component={isSupportGalleryView ? Video : galleryViewWithoutSAB ? VideoNonSAB : VideoSingle} />\n                <Route path=\"/chat\" component={Chat} />\n                <Route path=\"/command\" component={Command} />\n              </Switch>\n            </Router>\n            </CommandContext.Provider>\n            </RecordingContext.Provider>\n          </ChatContext.Provider>\n        </ZoomMediaContext.Provider>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAqBA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AAcA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAiCA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AATA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAGA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AATA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AA4CA;AACA;AAnKA;AACA;AADA;AAoKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}